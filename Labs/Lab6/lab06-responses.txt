Lab 06 CMPT 145Mohamed Bensaleh11254030Mob127Activity: Using different clocks  When I used time.time() I observed that in the times.py it provides similar graphs to the very first time I ran it without any changes. However, there are small differences. In the ratios.py the graphs show lines that are roughly flat with some variance. The sort() ratio is just higher than 2 and Is quite flat, the bubblesort() ratio is around 5 and curves upward slightly, linear seach() ratio is around 2 and has no obvious curve.Activity: Using average instead of minimum When I used mean() I observed that in the times.py it provides similar graphs to the time.time() activity however, the sort() isn’t as linear as it was before (this is the one that has changed the most, the bubblesort() and linear search() have not changed significantly. In the ratios.py the graphs show lines that are roughly flat with some variance. The sort() ratio is just higher than 2 and Is quite flat same as in the using different clocks activity, the bubblesort() ratio is around 5 and doesn’t  curve as much as before in the last activity, linear seach() ratio is around 2 and has no obvious curve.Activity: Changing the experiment  When I used larger lists for bubblesort, I observed that the wait time was much longer for times.py. I observed that in the times.py, it provided a very linear graph for sort(), a slightly similar graph for the bubblesort() compared to the activity before however there is a uprise at the 2000 mark for it. Linear search() curves upward slightly and is more similar to the using different clocks activity. Running ratios.py was much quicker and provided similar graphs to ratios.py for ‘using average instead of minimum activity’. Sort() was almost exactly the same just a horizontal linear line. Bubblesort() had a slight upward curve with a lot of up and down movement between each graph point causing a very jagged hill look to it. Linear search() was quite similar to sort(), horizontal line but not as linear as sort().Activity: Changing the experiment   When I used small lists I observed that each provided quite linear graphs for  times.py. Sort is linear diagonal line. Bubblesort() curves more upwards the farther it goes. Linear search() is linear diagonal line, however it begins to curve downward slightly the farther it goes. Ratios.py provided a scope() graph that is somewhat horizontal but not straight or linear, its ratio hovers above 2. Bubblesort() ratio Increases significantly at the start around 6 but then descends and continues to hover around 4. Linear search() is the most linear and horizontal, its ratio is around 2.